{
	"name": "SQL_Dedicated_00_Create",
	"properties": {
		"content": {
			"query": "IF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name = 'SynapseParquetFormat') \n\tCREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] \n\tWITH ( FORMAT_TYPE = PARQUET)\nGO\n\nIF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE name = 'primaryfilesystem_orrindatalake_dfs_core_windows_net') \n\tCREATE EXTERNAL DATA SOURCE [primaryfilesystem_orrindatalake_dfs_core_windows_net] \n\tWITH (\n\t\tLOCATION = 'abfss://primaryfilesystem@orrindatalake.dfs.core.windows.net' \n\t)\nGO\n\ndrop external table game01daily;\ngo\n\nCREATE EXTERNAL TABLE game01daily (\n\t[ISO8601] nvarchar(4000),\n\t[location] nvarchar(4000),\n\t[net_ping] float,\n\t[refresh_rate] float\n\t)\n\tWITH (\n\tLOCATION = '02-work-in-process/game-telemetry/game-01/daily-files/',\n\tDATA_SOURCE = [primaryfilesystem_orrindatalake_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\n\n\nSELECT TOP 100 * FROM dbo.game01daily\nGO\n\n\n-- Create schemas\ncreate schema staging;\ngo\ncreate schema dw;\ngo\n\n\n\n\n-- Create tables\nCREATE TABLE [staging].[game-01]\n( \n\t[ISO8601] [varchar](20)  NULL,\n\t[location] [varchar](20)  NULL,\n\t[net_ping] [float]  NULL,\n\t[refresh_rate] [float]  NULL\n)\nWITH\n(\n\tDISTRIBUTION = ROUND_ROBIN,\n\tHEAP\n)\nGO\nCREATE TABLE [dw].[games]\n( \n\t[ISO8601] [varchar](20)  NULL,\n\t[location] [varchar](20)  NULL,\n\t[net_ping] [float]  NULL,\n\t[refresh_rate] [float]  NULL\n)\nWITH\n(\n\tDISTRIBUTION = HASH ( [location] ),\n\tCLUSTERED COLUMNSTORE INDEX\n)\nGO\n\n\n\n\n-- Create Stored Proc\nCREATE PROC [dbo].[sp_dwInsert] AS\nBEGIN\n    -- Truncate the staging table. Staging table will only hold new records to be inserted\n    truncate table staging.[game-01];\n\n    -- Insert only new records into the staging table\n    insert into staging.[game-01]\n    select\n         e.ISO8601\n        ,e.location\n        ,e.net_ping\n        ,e.refresh_rate\n    from dbo.game01daily as e\n    left join dw.games as s\n    on \n        e.ISO8601 = s.ISO8601\n    --    and e.deviceid = s.deviceid\n    --    and e.avg_temperature = s.avg_temperature\n    --    and e.avg_humidity = e.avg_humidity\n    where s.ISO8601 is null\n\n    -- Insert new records into the DW table\n    insert into dw.games select * from staging.[game-01];\nEND\nGO",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "SQLDedicated",
				"poolName": "SQLDedicated"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}